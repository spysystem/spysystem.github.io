swagger: '2.0'

info:
  title: API Documentation for SPY Systems
  description: |
    API Documentation for communicating with the SPY System.

    # Introduction
    This document will describe how developers can authenticate and communicate with the [SPY System](https://www.spysystem.dk) API.

    # OpenAPI Specification (OAS)
    We're using [Swagger](https://swagger.io/) to generate and publish an **OpenAPI Specification (OAS)** document for the [SPY System API]
    which is compatible with tools like [Swagger](https://swagger.io/), [Open API Generator](https://openapi-generator.tech/), [Postman](https://www.postman.com/)
    that are used for viewing and testing resources before putting them in your codebase. Also for generating client libraries in php,
    ruby, python, go, csharp and a lot [more](https://openapi-generator.tech/docs/generators).

    # Order Flow (IMPORTANT)
    Once the [order](#tag/orders) is created it will be imported into the SPY System. Here it will be waiting to be packed. Once packed a webhook event will
    tell the api user the order has been packed and needs to be *accepted* before being send.

    At this point the status for the [delivery](#tag/delivery) is *pending*.

    By changing the [delivery](#tag/delivery) status to *accepted*, will notice the spy system that it is ok for being delivered and invoiced.

    By changing the status to *rejected* will cancel the [delivery](#tag/delivery) and make it immuteable. A new [delivery](#tag/delivery) is required for it to being delivered (**NOT** a new order).

    It is possible to change status from *accepted* to pending and vice versa, but *rejected* is locking it.

    # CHANGELOG
    - 1.2.6
      - Added Variants endpoint
      - Added Delivery endpoint
      - Added Orders endpoint
    - 1.2.7
      - Added Freight endpoint
      - Added Brands endpoint
    - 1.2.8
      - Added more information to Variants
        - Style Description
        - Wash
        - Category
        - Quality
        - Type
        - Gender
    - 1.2.14
      - Added variantType to Variant

  version: 1.2.15
  contact:
    email: info@spysystem.dk

  x-logo:
    url: "https://spysystem.github.io/300x110_grey_spy_logo.png"
    altText: "SPY System Logo"
    backgroundColor: "#FFFFFF"

  license:
    name: Apache 2.9
    url: http://www.apache.org/licenses/LICENSE-2.0.html

host: demo.spysystem.dk
basePath: /api/v1
schemes:
  - https

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-Spy-Authorization

  ApiReadToken:
    type: apiKey
    in: header
    name: X-Spy-ReadToken

paths:
  /auth/login:
    post:
      description: Authenticate with Spy
      operationId: Authenticate
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/AuthenticateData'
      responses:
        '200':
          description: Authentication successfull - authorization token in response data
          schema:
            $ref: '#/definitions/AuthenticateResponse'

  /variants:
    get:
      description: List Variants
      operationId: listVariants
      tags:
        - variants
      security:
        - ApiReadToken: []
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: brandName
          required: true
          type: string
        - in: query
          name: styleNo
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Lists Variants
          schema:
            $ref: '#/definitions/ListVariantsResponse'

  /brands:
    get:
      description: List Brands
      operationId: listBrands
      tags:
        - brands
      security:
        - ApiReadToken: []
        - ApiKeyAuth: []
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Lists Brands
          schema:
            $ref: '#/definitions/ListBrandsResponse'

  /freight:
    get:
      description: List Freight Options
      operationId: listFreight
      tags:
        - freight
      security:
        - ApiReadToken: []
        - ApiKeyAuth: []
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: List Freight Options
          schema:
            $ref: '#/definitions/ListFreightResponse'



  /variants/{barcode}:
    get:
      description: List Variant based on Barcode
      operationId: getVariant
      tags:
        - variants
      security:
        - ApiReadToken: []
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: barcode
          required: true
          type: string
        - in: query
          name: brandName
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Lists Variant
          schema:
            $ref: '#/definitions/ListVariantResponse'

  /orders:
    post:
      description: Create Order
      operationId: createOrder
      tags:
        - orders
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/OrderData'
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Create Order Successful
          schema:
            $ref: '#/definitions/CreateOrderResponse'

  /delivery/{deliveryNo}:
    post:
      description: Delivery Status
      operationId: deliveryStatus
      tags:
        - delivery
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: deliveryNo
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/DeliveryData'
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Delivery Status Changed Successfully
          schema:
            $ref: '#/definitions/DeliveryResponse'
  /delivery:
    get:
      description: List Deliveries
      operationId: listDeliveries
      tags:
        - delivery
      security:
        - ApiReadToken: []
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: from
          description: From Date
          required: false
          type: string
        - in: query
          name: to
          description: To Date
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: Lists Deliveries
          schema:
            $ref: '#/definitions/DeliveriesResponse'

definitions:
  StyleVariant:
    type: object
    required:
      - name
      - type
      - barcode
      - qtyInVariant
    properties:
      'name':
        type: string
      'type':
        type: string
        enum:
          - size
          - assortment
      'barcode':
        type: string
      'qtyInVariant':
        description: If StyleVariant is of type assortment, each variant may contain multiple qties
        type: integer
      'variantsInVariant':
        description: If StyleVariant is of type assortment, then this will show which items it contains
        type: array
        items:
          $ref: '#/definitions/VariantLine'

  Image:
    type: object
    required:
      - url
    properties:
      'url':
        type: string

  VariantLine:
    type: object
    required:
      - styleVariant
      - qty
    properties:
      'styleVariant':
        $ref: '#/definitions/StyleVariant'
      'qty':
        type: integer

  Response:
    type: object
    required:
      - status
      - message
    properties:
      'status':
        type: integer
      'message':
        type: string

  AuthenticateResponseData:
    type: object
    required:
      - token
    properties:
      'token':
        type: string
  AuthenticateResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/AuthenticateResponseData'

  AuthenticateData:
    type: object
    required:
      - clientID
      - clientSecret
    properties:
      'clientID':
        type: string
      'clientSecret':
        type: string

  ListVariantsResponseData:
    type: object
    required:
      - count
      - variants
    properties:
      'count':
        type: integer
      'variants':
        type: array
        items:
          $ref: '#/definitions/Variant'

  ListVariantsResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/ListVariantsResponseData'

  ListVariantResponseData:
    type: object
    required:
      - variant
    properties:
      'variant':
        $ref: '#/definitions/Variant'

  ListVariantResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/ListVariantResponseData'

  OrderData:
    type: object
    required:
      - shippingAddress
      - orderLineItems
      - reference
      - freight
    properties:
      'shippingAddress':
        $ref: '#/definitions/ShippingAddress'
      'orderLineItems':
        type: array
        items:
          $ref: '#/definitions/OrderLineItem'
      'reference':
        type: string
      'comment':
        type: string
      'freight':
        $ref: '#/definitions/Freight'

  DeliveryData:
    type: object
    required:
      - status
    properties:
      'status':
        type: string
        enum:
          - pending
          - accepted
          - rejected

  CreateOrderResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/CreateOrderResponseData'

  DeliveryResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/DeliveryResponseData'

  ShippingAddress:
    type: object
    required:
      - address
      - city
      - zip
      - countryCode
      - firstName
      - lastName
      - phone
      - email
    properties:
      'address':
        type: string
      'address2':
        type: string
      'city':
        type: string
      'company':
        type: string
      'country':
        type: string
      'countryCode':
        type: string
      'firstName':
        type: string
      'lastName':
        type: string
      'phone':
        type: string
      'email':
        type: string
      'provinceCode':
        type: string
      'zip':
        type: string

  OrderLineItem:
    type: object
    required:
      - barcode
      - quantity
      - price
    properties:
      'barcode':
        type: string
      'quantity':
        type: integer
      'price':
        type: number

  Variant:
    type: object
    required:
      - barcode
      - variantType
      - styleNo
      - brandName
      - styleName
      - colorName
      - size
      - quantity
      - price
      - currency
      - images
    properties:
      'barcode':
        type: string
      'variantType':
        type: string
        enum:
          - size
          - assortment
      'styleNo':
        type: string
      'brandName':
        type: string
      'styleName':
        type: string
      'colorName':
        type: string
      'size':
        type: string
      'quantity':
        type: number
      'price':
        type: number
      'currency':
        type: string
      'styleDescription':
        type: string
      'wash':
        type: string
      'category':
        type: string
      'quality':
        type: string
      'type':
        type: string
      'gender':
        type: string
      'images':
        type: array
        items:
          $ref: '#/definitions/Image'

  CreateOrderResponseData:
    type: object
    required:
      - orderId
      - orderStatus
    properties:
      'orderId':
        type: number
      'orderStatus':
        type: string

  DeliveryResponseData:
      type: object
      required:
        - deliveryNo
        - status
      properties:
        'deliveryNo':
          type: number
        'status':
          type: string
          enum:
            - pending
            - accepted
            - rejected

  Freight:
    type: object
    required:
      - freightAmount
    properties:
      'freightAmount':
        type: number
      'freightType':
        type: string
      'parcelShopId':
        type: string

  DeliveriesResponseData:
    type: object
    required:
      - count
      - deliveries
    properties:
      'count':
        type: integer
      'deliveries':
        type: array
        items:
          $ref: '#/definitions/Delivery'

  DeliveriesResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/DeliveriesResponseData'

  Delivery:
    type: object
    required:
      - deliveryNo
      - status
      - variants
    properties:
      'deliveryNo':
        type: string
      'status':
        type: string
      'variants':
        type: array
        items:
          $ref: '#/definitions/Variant'

  ListBrandsResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/ListBrandsResponseData'
  ListBrandsResponseData:
    type: object
    required:
      - count
      - brands
    properties:
      'count':
        type: integer
      'brands':
        type: array
        items:
          $ref: '#/definitions/Brand'
  Brand:
    type: object
    required:
      - brandName
    properties:
      'brandName':
        type: string

  ListFreightResponse:
    allOf:
      - $ref: '#/definitions/Response'
      - type: object
        required:
          - data
        properties:
          'data':
            $ref: '#/definitions/ListFreightResponseData'

  ListFreightResponseData:
    type: object
    required:
      - count
      - freightOptions
    properties:
      'count':
        type: integer
      'freightOptions':
        type: array
        items:
          $ref: '#/definitions/FreightOption'

  FreightOption:
    type: object
    properties:
      'freightType':
        type: string
